SET autoddl OFF;

-- CREATE DOMAIN FOR UUID
CREATE DOMAIN UUID AS CHAR(16);

-- TABLE: STATUS CODE TABLE
-- A CODE TABLE CONTAINING THE ALLOWED STATUS CODES FOR USE IN THE AUDIT SUBSYSTEM
CREATE TABLE AUD_STS_CDTBL (
	CD_ID	NUMERIC(1) NOT NULL, -- THE CODE IDENTIFIER
	NAME	VARCHAR(16) NOT NULL UNIQUE, -- THE DISPLAY NAME OF THE CODE
	CONSTRAINT PK_AUD_STS_CDTBL PRIMARY KEY (CD_ID)
);

-- TABLE: NODE_TBL TABLE 
-- TRACKS THE PHYSICAL DEVICES (NODE_TBLS) THAT ARE PERMITTED TO USE THE SYSTEM
CREATE TABLE AUD_NODE_TBL
(
	NODE_ID UUID NOT NULL,
	DEV_ID UUID, -- THE DEVICE IDENTIFIER 
	NAME VARCHAR(256), -- A FRIENDLY NAME FOR THE NODE_TBL
	HOST_NAME VARCHAR(256), -- THE HOST URL/SCHEME
	STS_CD_ID INTEGER  DEFAULT 0 NOT NULL, -- THE STATUS OF THE NODE_TBL
	CRT_UTC TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, -- THE CREATION TIME OF THIS VERSION
	CRT_USR_ID UUID NOT NULL, -- THE USER THAT CREATED THE NODE
	UPD_UTC TIMESTAMP, -- THE TIME THE NODE WAS CHANGED
	UPD_USR_ID UUID, -- THE USER THAT UPDATED THE NODE
	OBSLT_UTC TIMESTAMP, -- THE TIME THIS RECORD WAS OBSOLETED	CONSTRAINT PK_NODE_TBL PRIMARY KEY (NODE_ID)
	OBSLT_USR_ID UUID, -- THE USER THAT OBSOLETED THE DATA
	CONSTRAINT PK_AUD_NODE_TBL PRIMARY KEY (NODE_ID),
	CONSTRAINT FK_AUD_NODE_TBL_STS_CD_ID FOREIGN KEY (STS_CD_ID) REFERENCES AUD_STS_CDTBL(CD_ID)
);

-- TABLE: AUDIT CODE TABLE
-- USED TO TRACK THE CODES THAT ARE USED IN THE AUDITING
CREATE TABLE AUD_CD_TBL
(
	CD_ID UUID NOT NULL, -- A UNIQUE ID FOR THE CODE
	MNEMONIC VARCHAR(54) NOT NULL, -- THE MNEMNONIC FOR THE CODE
	DOMAIN VARCHAR(54) NOT NULL, -- A DOMAIN TO WHICH THE MNEMONIC BELONGS
	DISPLAY VARCHAR(256), -- THE HUMAN READABLE NAME FOR THE CODE
	CONSTRAINT PK_AUD_CD_TBL PRIMARY KEY (CD_ID)
);

CREATE UNIQUE INDEX AUD_CD_MNEMONIC_IDX ON AUD_CD_TBL(DOMAIN, MNEMONIC);

-- TABLE: AUDIT SESSION
-- TRACKS A SESSION WITH A REMOTE HOST FOR LONG RUNNING AUDITS OR BATCHES OF AUDIT SUBMISSIONS
CREATE TABLE AUD_SES_TBL
(
	SES_ID UUID NOT NULL, -- UNIQUE IDENTIFIER FOR THE SESSION
	RCV_NODE_ID UUID NOT NULL, -- THE ID OF THE RECEIVING NODE_TBL
	RCV_EP VARCHAR(256) NOT NULL, -- THE ENDPOINT THE AUDIT WAS RECCEIVED ON
	SND_NODE_ID UUID NOT NULL, -- THE ID OF THE SENDING NODE_TBL
	SND_EP VARCHAR(256) NOT NULL, -- THE SENDING ENDPOINT
	CRT_UTC TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, -- THE TIME THAT THE SESSION WAS CREATED
	CRT_USR_ID UUID NOT NULL, 
	OBSLT_UTC TIMESTAMP,
	OBSLT_USR_ID UUID,
	CONSTRAINT PK_AUD_SES_TBL PRIMARY KEY (SES_ID),
	CONSTRAINT FK_RCVR_NOD_ID FOREIGN KEY (RCV_NODE_ID) REFERENCES AUD_NODE_TBL(NODE_ID),
	CONSTRAINT FK_SND_NODE_ID FOREIGN KEY (SND_NODE_ID) REFERENCES AUD_NODE_TBL(NODE_ID)
);


-- TABLE: AUDIT SOURCES TABLE
-- TRACKS AN AUDIT SOURCE'S ENTERPRISE SITE AND SOURCE
CREATE TABLE AUD_SRC_TBL
(
	AUD_SRC_ID UUID NOT NULL, -- A UNIQUE IDENTIFIER FOR THE AUDIT SOURCE RECORD
	ENT_STE_NAM VARCHAR(256), -- THE NAME OF THE ENTERPRISE SITE
	AUD_SRC_NAM VARCHAR(256), -- THE NAME OF THE AUDIT SOURCE
	CONSTRAINT PK_AUD_SRC_TBL PRIMARY KEY (AUD_SRC_ID)
);

-- TRACKS A RELATIONSHIP BETWEEN THE AUDIT SOURCE AND TYPES
CREATE TABLE AUD_SRC_TYP_TBL
(
	AUD_SRC_ID UUID NOT NULL, -- THE AUDIT SOURCE TO WHICH THE ASSOCIATION APPLIES
	CD_ID UUID NOT NULL, -- THE CODE OF WHICH THE AUDIT SOURCE IS
	CONSTRAINT PK_AUD_SRC_TYP_TBL PRIMARY KEY(AUD_SRC_ID, CD_ID),
	CONSTRAINT FK_AUD_SRC_AUD_SRC_TBL FOREIGN KEY (AUD_SRC_ID) REFERENCES AUD_SRC_TBL(AUD_SRC_ID),
	CONSTRAINT FK_AUD_SRC_CD_TBL FOREIGN KEY (CD_ID) REFERENCES AUD_CD_TBL(CD_ID)
);


-- TABLE: AUDIT TABLE
-- TRACKS THE AUDITS SENT TO THE VISUALIZER
CREATE TABLE AUD_TBL
(
	AUD_ID	UUID NOT NULL, -- UNIQUE IDENTIFIER FOR THE AUDIT 
	CORR_ID UUID NOT NULL, -- CORRELATION IDENTIFIER FOR THE AUDIT FROM THE EXTERNAL SYSTEM 
	SRC_ID UUID NOT NULL, -- THE AUDIT SOURCE INFORMATION
	ACT_CD_ID UUID NOT NULL, -- THE CODE CONTAINING THE ACTION
	OUT_CD_ID UUID NOT NULL, -- THE CODE CONTAINING THE OUTCOME
	EVT_CD_ID UUID NOT NULL, -- THE EVENT CODE
	EVT_UTC TIMESTAMP NOT NULL, -- THE TIME THE EVENT OCCURRED
	SES_ID UUID, -- THE UUID OF THE AUDIT CORRELATION
	PS_NAME VARCHAR(256), -- THE NAME OF THE PROCESS
	PS_ID VARCHAR(256), 
	CONSTRAINT PK_AUD_TBL PRIMARY KEY (AUD_ID),
	CONSTRAINT FK_AUD_ACT_CD_ID_TBL FOREIGN KEY (ACT_CD_ID) REFERENCES AUD_CD_TBL(CD_ID),
	CONSTRAINT FK_AUD_OUT_CD_ID_TBL FOREIGN KEY (OUT_CD_ID) REFERENCES AUD_CD_TBL(CD_ID),
	CONSTRAINT FK_AUD_EVT_CD_ID_TBL FOREIGN KEY (EVT_CD_ID) REFERENCES AUD_CD_TBL(CD_ID),
	CONSTRAINT FK_AUD_SES_ID_TBL FOREIGN KEY (SES_ID) REFERENCES AUD_SES_TBL(SES_ID),
	CONSTRAINT FK_AUD_SRC_ID_TBL FOREIGN KEY (SRC_ID) REFERENCES AUD_SRC_TBL(AUD_SRC_ID)

);

-- INDEX: LOOKUP BY ACTION CODE OR OUTCOME
CREATE INDEX AUD_ACT_CD_IDX ON AUD_TBL(ACT_CD_ID);
CREATE INDEX ACT_OUT_CD_IDX ON AUD_TBL(OUT_CD_ID);

-- TABLE: TRACK AUDIT PARTICIPANTS
-- TRACKS THE PARTICIPANTS IN AN AUDIT
CREATE TABLE AUD_PTCPT_TBL
(
	PTCPT_ID UUID NOT NULL, -- UNIQUE ISENTIFIER FOR THE PARTICIPANT
	NODE_ID UUID, -- THE LINKED NODE VERSION IN THE RECORD
	SID UUID, -- THE USER OR DEVICE SECURITY IDENTIFIER MAPPED TO 
	USR_ID VARCHAR(256), -- THE USER IDENTIFIER AS IT APPEARED ON THE AUDIT
	USR_NAME VARCHAR(256), -- THE USER NAME AS IT APPEARED ON THE AUDIT
	NET_AP VARCHAR(256), -- THE IP ADDRESS OF THE PARITICIPANT
	NET_AP_TYP INTEGER, 
	CONSTRAINT PK_AUD_PTCPT_TBL PRIMARY KEY (PTCPT_ID),
	CONSTRAINT FK_AUD_PTCPT_NODE_TBL FOREIGN KEY (NODE_ID) REFERENCES AUD_NODE_TBL(NODE_ID)
);

-- INDEX: LOOKUP PARTICIPANT BY AUDIT ID, USER ID OR NODE_TBL VERSION
CREATE INDEX AUD_PTCPT_USR_IDX ON AUD_PTCPT_TBL(USR_ID);
CREATE INDEX AUD_PTCPT_NODE_IDX ON AUD_PTCPT_TBL(NODE_ID);

-- LINKS PARTICIPANTS TO AUDITS
CREATE TABLE AUD_PTCPT_AUD_ASSOC_TBL 
(
	ASSOC_ID UUID NOT NULL, -- SURROGATE KEY
	AUD_ID UUID NOT NULL, -- AUDIT IDENTIFIER
	PTCPT_ID UUID NOT NULL, -- PARTICIPANT IDENTIFIER 
	IS_RQO BOOLEAN DEFAULT FALSE NOT NULL, -- TRUE IF THE PARTICIPANT INITIATED THE REQUEST
	CONSTRAINT PK_AUD_PTCPT_AUD_ASSOC_TBL PRIMARY KEY (ASSOC_ID),
	CONSTRAINT FK_AUD_PTCPT_AUD_AUD_TBL FOREIGN KEY (AUD_ID) REFERENCES AUD_TBL(AUD_ID),
	CONSTRAINT FK_AUD_PTCPT_AUD_PTCPT_TBL FOREIGN KEY (PTCPT_ID) REFERENCES AUD_PTCPT_TBL(PTCPT_ID)
);

-- TABLE: AUDIT PARTICIPANT ROLE CODE ASSOCIATION
-- TRACKS AN ASSOCIATION BETWEEN AN AUDIT ACTIVE PARTICIPANT AND THE ROLE CODES
CREATE TABLE AUD_PTCPT_ROL_CD_ASSOC_TBL
(
	ASSOC_ID UUID NOT NULL, -- ASSOCIATION THIS ROLE APPLIES TO
	CD_ID UUID NOT NULL, -- THE IDENTIFIER FOR THE ROLE CODE
	CONSTRAINT PK_AUD_PTCPT_ROL_CD_ASSOC_TBL PRIMARY KEY (ASSOC_ID, CD_ID),
	CONSTRAINT FK_AUD_PTCPT_ROL_CD_CD_TBL FOREIGN KEY (CD_ID) REFERENCES AUD_CD_TBL(CD_ID)
);

-- INDEX: LOOKUP PARTICIPANT ROLE CODE BY PARTICIPANT ID
CREATE INDEX AUD_PTCPT_ROL_CD_ASSOC_IDX ON AUD_PTCPT_ROL_CD_ASSOC_TBL(ASSOC_ID);


-- SEQUENCE
CREATE SEQUENCE VRSN_SEQ;


-- TABLE: AUDIT STATUS TABLE
-- TRACKS THE STATUS OF AN AUDIT OVER TIME
CREATE TABLE AUD_VRSN_TBL
(
	AUD_VRSN_ID UUID NOT NULL, -- UNIQUE IDENTIFIER FOR THE CHANGE TO THE AUDIT STATUS
	AUD_ID UUID NOT NULL, -- THE IDENTIFIER OF THE AUDIT FOR WHICH THIS CHANGE APPLIES
	RPLC_VRSN_ID UUID, -- THE VERSION THAT THIS RECORD REPLACES
	VRSN_SEQ_ID INTEGER NOT NULL, -- SEQUENCE OF THE AUDIT
	STS_CD_ID INTEGER NOT NULL, -- THE STATUS CODE TO WHICH THE NEW AUDIT IS TARGETED
	IS_ALRT BOOLEAN DEFAULT FALSE,
	CRT_UTC TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, -- THE TIME THE STATUS VERSION WAS CREATED
	CRT_USR_ID UUID NOT NULL, -- THE USER THAT RESULTED IN THE CREATION OF THIS VERSION
	OBSLT_UTC TIMESTAMP, -- THE TIME WHEN THE STATUS WAS NO LONGER VALID
	OBSLT_USR_ID UUID, -- OBSOLETION USER IDENTIFIER
	CONSTRAINT PK_AUD_VRSN_TBL PRIMARY KEY (AUD_VRSN_ID),
	CONSTRAINT FK_AUD_VRSN_AUD_TBL FOREIGN KEY (AUD_ID) REFERENCES AUD_TBL(AUD_ID),
	CONSTRAINT FK_AUD_VRSN_STS_TBL FOREIGN KEY (STS_CD_ID) REFERENCES AUD_STS_CDTBL(CD_ID)
);


SET TERM !!;
CREATE TRIGGER TG_AUD_VRSN_TBL_SEQ FOR AUD_VRSN_TBL ACTIVE BEFORE INSERT POSITION 0 AS BEGIN
	NEW.VRSN_SEQ_ID = NEXT VALUE FOR VRSN_SEQ;
END!!
SET TERM ; !!

-- INDEX: LOOKUP AUDIT STATUS BY AUDIT ID
CREATE INDEX AUD_VRSN_AUD_IDX ON AUD_VRSN_TBL(AUD_ID);


-- TABLE: AUDIT EVENT TYPE CODE ASSOCIATION TABLE
-- TRACKS THE RELATIONSHIP BETWEEN AN AUDIT AND TYPE CODES
CREATE TABLE AUD_EVT_TYP_CD_ASSOC_TBL
(
	AUD_ID UUID NOT NULL, -- THE IDENTIFIER OF THE AUDIT TO WHICH THE ASSOCIATION APPLIES,
	CD_ID UUID NOT NULL, -- THE IDENTIFIER OF THE CODE WHICH CARRIES MEANING IN RELATION TO THE EVENT TYPE
	CONSTRAINT PK_AUD_EVT_TYP_CD_ASSOC_TBL PRIMARY KEY (AUD_ID, CD_ID),
	CONSTRAINT FK_AUD_EVT_TYP_CD_AUD_TBL FOREIGN KEY (AUD_ID) REFERENCES AUD_TBL(AUD_ID),
	CONSTRAINT FK_AUD_EVT_TYP_CD_CD_TBL FOREIGN KEY (CD_ID) REFERENCES AUD_CD_TBL(CD_ID)
);

-- INDEX: LOOKUP EVENT TYPE BY CODE OR AUDIT
CREATE INDEX AUD_EVT_TYP_CD_ASSOC_CD_IDX ON AUD_EVT_TYP_CD_ASSOC_TBL(AUD_ID);

-- TABLE: AUDIT PARTICIPANT OBJECTS DETAIL
-- TRACKS DETAILS RELATED TO THE OBJECTS THAT WERE UPDATED, DISCLOSED, OR CREATED FOR THIS AUDIT
CREATE TABLE AUD_OBJ_TBL 
(
	OBJ_ID UUID NOT NULL, -- A UNIQUE IDENTIFIER FOR THE OBJECT
	AUD_ID UUID NOT NULL, -- THE AUDIT TO WHICH THE OBJECT APPLIES
	EXT_ID VARCHAR(256) NOT NULL, -- THE EXTERNAL IDENTIFIER (ID) OF THE PARTICIPANT OBJECT
	TYP_CD_ID UUID NOT NULL, -- THE TYPE OF OBJECT REFERENCED
	ROL_CD_ID UUID, -- THE ROLE OF THE OBJECT IN THE EVENT
	LCYCL_CD_ID UUID, -- THE LIFECYCLE OF THE OBJECT IF APPLICABLE
	ID_TYP_CD_ID UUID, -- SPECIFIES THE TYPE CODE FOR THE OBJECT
	CONSTRAINT PK_AUD_OBJ_TBL PRIMARY KEY (OBJ_ID),
	CONSTRAINT FK_AUD_OBJ_TYP_CD_TBL FOREIGN KEY (TYP_CD_ID) REFERENCES AUD_CD_TBL(CD_ID),
	CONSTRAINT FK_AUD_OBJ_LCYCL_CD_TBL FOREIGN KEY (LCYCL_CD_ID) REFERENCES AUD_CD_TBL(CD_ID),
	CONSTRAINT FK_AUD_OBJ_ROL_CD_TBL FOREIGN KEY (ROL_CD_ID) REFERENCES AUD_CD_TBL(CD_ID),
	CONSTRAINT FK_AUD_OBJ_ID_TYP_CD_TBL FOREIGN KEY (ID_TYP_CD_ID) REFERENCES AUD_CD_TBL(CD_ID),
	CONSTRAINT FK_AUD_OBJ_AUD_TBL FOREIGN KEY (AUD_ID) REFERENCES AUD_TBL(AUD_ID)
);

-- INDEX: LOOKUP OBJECT BY AUDIT ID
CREATE INDEX AUD_OBJ_AUD_IDX ON AUD_OBJ_TBL(AUD_ID);

-- AUDITABLE OBJECT SPECIFICATION TABLE
CREATE TABLE AUD_OBJ_SPEC_TBL (
	SPEC_ID UUID NOT NULL,
	OBJ_ID UUID NOT NULL, -- THE OBJECT TO WHICH THE SPEC APPLIES
	SPEC VARCHAR(1024) NOT NULL, -- THE SPECIFICATION
	SPEC_TYP CHAR(1) CHECK (SPEC_TYP IN ('N','Q')),
	CONSTRAINT PK_AUD_OBJ_SPEC_TBL PRIMARY KEY (SPEC_ID),
	CONSTRAINT FK_AUD_OBJ_SPEC_OBJ_TBL FOREIGN KEY (OBJ_ID) REFERENCES AUD_OBJ_TBL(OBJ_ID)
);

-- TABLE: AUDIT OBJECT DETAILS TABLE
-- TRACKS ADDITIONAL DETAIL ABOUT AN AUDITABLE OBJECT
CREATE TABLE AUD_OBJ_DTL_TBL
(
	DTL_ID UUID NOT NULL, -- A UNIQUE IDENTIFIER FOR THE OBJECT DETAIL LINE
	OBJ_ID UUID NOT NULL, -- IDENTIFIES THE AUDITABLE OBJECT TO WHICH THE DETAIL BELONGS
	DTL_TYP VARCHAR(256) NOT NULL, -- IDENTIFIES THE TYPE OF DETAIL
	DTL_VAL BLOB NOT NULL, -- IDENTIFIES THE ADDITIONAL DETAIL DATA
	CONSTRAINT PK_AUD_OBJ_DTL_TBL PRIMARY KEY (DTL_ID),
	CONSTRAINT FK_AUD_OBJ_DTL_OBJ_TBL FOREIGN KEY (OBJ_ID) REFERENCES AUD_OBJ_TBL(OBJ_ID)
);

-- INDEX: LOOKUP OBJECT DETAIL BY OBJECT ID
CREATE INDEX AUD_OBJ_DTL_OBJ_IDX ON AUD_OBJ_DTL_TBL(OBJ_ID);

-- TABLE: AUDIT ERROR
-- STORES AUDIT ERRORS 
CREATE TABLE AUD_DTL_TBL
(
	DTL_ID UUID NOT NULL, -- A UNIQUE IDENTIFIER FOR THE ERROR
	SES_ID UUID NOT NULL, -- THE SESSION IN WHICH THE AUDIT WAS COLLECTED
	LEVEL NUMERIC(2) NOT NULL, -- THE LEVEL OF THE DETAIL
	MSG VARCHAR(1024) NOT NULL, -- THE ERROR MESSAGE
	AUD_ID UUID, -- THE MESSAGE ID IF APPLICABLE
	STACK BLOB SUB_TYPE TEXT, -- THE STACK TRACE OF ANY EXCEPTION WHICH CAUSED THE ERROR
	CRT_UTC TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	CAUS_BY_ID UUID, -- THE CAUSE OF THIS ERROR (IF APPLICABLE)
	STS_CD_ID INTEGER DEFAULT 0 NOT NULL,
	CONSTRAINT PK_AUD_DTL_TBL PRIMARY KEY (DTL_ID), 
	CONSTRAINT FK_AUD_DTL_SES_TBL FOREIGN KEY (SES_ID) REFERENCES AUD_SES_TBL(SES_ID),
	CONSTRAINT FK_AUD_DTL_CAUS_TBL FOREIGN KEY (CAUS_BY_ID) REFERENCES AUD_DTL_TBL(DTL_ID),
	CONSTRAINT FK_AUD_DTL_STS_TBL FOREIGN KEY (STS_CD_ID) REFERENCES AUD_STS_CDTBL(CD_ID)
);

COMMIT;

-- SEED DATA
INSERT INTO AUD_STS_CDTBL VALUES (0, 'NEW'); -- DATA IS NEW AND UNVERIFIED
INSERT INTO AUD_STS_CDTBL VALUES (1, 'ACTIVE'); -- DATA IS VERIFIED AND ACTIVE
INSERT INTO AUD_STS_CDTBL VALUES (2, 'HELD'); -- DATA WAS ACTIVE BUT IS NOW ON HOLD AND REQUIRES A REVIEW
INSERT INTO AUD_STS_CDTBL VALUES (3, 'NULLIFIED'); -- DATA IS NULLIFIED AND WAS NEVER INTENDED TO BE ENTERED
INSERT INTO AUD_STS_CDTBL VALUES (4, 'OBSOLETE'); -- DATA IS OBSOLETE AND HAS BEEN REPLACED
INSERT INTO AUD_STS_CDTBL VALUES (5, 'ARCHIVED'); -- DATA WAS ACTIVE BUT IS NO LONGER RELEVANT
INSERT INTO AUD_STS_CDTBL VALUES (6, 'SYSTEM'); -- SYSTEM LEVEL AUDIT NOT FOR DISPLAY 

INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '1','AuditableObjectType','PERSON');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '2','AuditableObjectType','SYSTEM OBJECT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '3','AuditableObjectType','ORGANIZATION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '4','AuditableObjectType','OTHER');

INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '1','AuditableObjectRole','PATIENT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '2','AuditableObjectRole','LOCATION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '3','AuditableObjectRole','REPORT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '4','AuditableObjectRole','RESOURCE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '5','AuditableObjectRole','MASTER FILE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '6','AuditableObjectRole','USER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '7','AuditableObjectRole','LIST');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '8','AuditableObjectRole','DOCTOR');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '9','AuditableObjectRole','SUBSCRIBER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '10','AuditableObjectRole','GUARANTOR');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '11','AuditableObjectRole','SECURITY USER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '12','AuditableObjectRole','SECURITY GROUP');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '13','AuditableObjectRole','SECURITY RESOURCE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '14','AuditableObjectRole','SECURITY GRANULARITY DEFINITION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '15','AuditableObjectRole','PROVIDER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '16','AuditableObjectRole','DATA DESTINATION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '17','AuditableObjectRole','DATA REPOSITORY');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '18','AuditableObjectRole','SCHEDULE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '19','AuditableObjectRole','CUSTOMER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '20','AuditableObjectRole','JOB');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '21','AuditableObjectRole','JOB STREAM');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '22','AuditableObjectRole','TABLE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '23','AuditableObjectRole','ROUTING CRITERIA');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '24','AuditableObjectRole','QUERY');

INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '1','AuditableObjectLifecycle','CREATION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '2','AuditableObjectLifecycle','IMPORT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '3','AuditableObjectLifecycle','AMENDMENT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '4','AuditableObjectLifecycle','VERIFICATION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '5','AuditableObjectLifecycle','TRANSLATION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '6','AuditableObjectLifecycle','ACCESS');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '7','AuditableObjectLifecycle','DEIDENTIFICATION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '8','AuditableObjectLifecycle','AGGREGATION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '9','AuditableObjectLifecycle','REPORT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '10','AuditableObjectLifecycle','EXPORT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '11','AuditableObjectLifecycle','DISCLOSURE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '12','AuditableObjectLifecycle','RECEIPT OF DISCLOSURE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '13','AuditableObjectLifecycle','ARCHIVING');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '14','AuditableObjectLifecycle','LOGICAL DELETION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '15','AuditableObjectLifecycle','PERMANENT ERASURE');

INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '1','AuditableObjectIdType','MEDICAL RECORD');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '2','AuditableObjectIdType','PATIENT NUMBER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '3','AuditableObjectIdType','ENCOUNTER NUMBER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '4','AuditableObjectIdType','ENROLLEE NUMBER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '5','AuditableObjectIdType','SOCIAL SECURITY NUMBER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '6','AuditableObjectIdType','ACCOUNT NUMBER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '7','AuditableObjectIdType','GUARANTOR NUMBER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '8','AuditableObjectIdType','REPORT NAME');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '9','AuditableObjectIdType','REPORT NUMBER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '10','AuditableObjectIdType','SEARCH CRITERION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '11','AuditableObjectIdType','USER IDENTIFIER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '12','AuditableObjectIdType','URI');

INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:A54D6AA5-D40D-43F9-88C5-B4633D873BDD','IHE XDS Meta Data','SUBMISSION SET');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:A7058BB9-B4E4-4307-BA5B-E3F0AB85E12D','IHE XDS Meta Data','SUBMISSION SET AUTHOR');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:AA543740-BDDA-424E-8C96-DF4873BE8500','IHE XDS Meta Data','SUBMISSION SET CONTENT TYPE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:96FDDA7C-D067-4183-912E-BF5EE74998A8','IHE XDS Meta Data','SUBMISSION SET UNIQUE ID');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:7EDCA82F-054D-47F2-A032-9B2A5B5186C1','IHE XDS Meta Data','DOCUMENT ENTRY');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:93606BCF-9494-43EC-9B4E-A7748D1A838D','IHE XDS Meta Data','DOCUMENT ENTRY AUTHOR');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:41A5887F-8865-4C09-ADF7-E362475B143A','IHE XDS Meta Data','DOCUMENT ENTRY CLASS CODE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:F4F85EAC-E6CB-4883-B524-F2705394840F','IHE XDS Meta Data','DOCUMENT ENTRY CONFIDENTIALITY CODE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:2C6B8CB7-8B2A-4051-B291-B1AE6A575EF4','IHE XDS Meta Data','DOCUMENT ENTRY EVENT CODE LIST');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:A09D5840-386C-46F2-B5AD-9C3699A4309D','IHE XDS Meta Data','DOCUMENT ENTRY FORMAT CODE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:F33FB8AC-18AF-42CC-AE0E-ED0B0BDB91E1','IHE XDS Meta Data','DOCUMENT ENTRY HEALTH CARE FCILITY TYPE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:58A6F841-87B3-4A3E-92FD-A8FFEFF98427','IHE XDS Meta Data','DOCUMENT ENTRY PATIENT ID');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:CCCF5598-8B07-4B77-A05E-AE952C785EAD','IHE XDS Meta Data','DOCUMENT ENTRY PRACTICE SETTING');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:F0306F51-975F-434E-A61C-C59651D33983','IHE XDS Meta Data','DOCUMENT ENTRY TYPE CODE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:2E82C1F6-A085-4C72-9DA3-8640A32E42AB','IHE XDS Meta Data','DOCUMENT ENTRY UNIQUE ID');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:D9D542F3-6CC4-48B6-8870-EA235FBC94C2','IHE XDS Meta Data','FOLDER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:1BA97051-7806-41A8-A48B-8FCE7AF683C5','IHE XDS Meta Data','FOLDER CODE LIST');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:F64FFDF0-4B97-4E06-B79F-A52B38EC2F8A','IHE XDS Meta Data','FOLDER PATIENT ID');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:75DF8F67-9973-4FBE-A900-DF66CEFECC5A','IHE XDS Meta Data','FOLDER UNIQUE ID');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:917DC511-F7DA-4417-8664-DE25B34D3DEF','IHE XDS Meta Data','APPEND');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:60FD13EB-B8F6-4F11-8F28-9EE000184339','IHE XDS Meta Data','REPLACEMENT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:EDE379E6-1147-4374-A943-8FCDCF1CD620','IHE XDS Meta Data','TRANSFORM');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:B76A27C7-AF3C-4319-BA4C-B90C1DC45408','IHE XDS Meta Data','TRANSFORM / REPLACE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:8EA93462-AD05-4CDC-8E54-A8084F6AFF94','IHE XDS Meta Data','SIGN');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'urn:uuid:10AA1A4B-715A-4120-BFD0-9760414112C8','IHE XDS Meta Data','DOCUMENT ENTRY STUB');

INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-1','IHE Transactions','MAINTAIN TIME');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-2','IHE Transactions','GET USER AUTHENTICATION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-3','IHE Transactions','GET SERVICE TICKET');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-4','IHE Transactions','KERBERIZED COMMUNICATION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-5','IHE Transactions','JOIN CONTEXT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-6','IHE Transactions','CHANGE CONTEXT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-7','IHE Transactions','LEAVE CONTEXT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-8','IHE Transactions','PATIENT IDENTITY FEED');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-9','IHE Transactions','PIX QUERY');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-10','IHE Transactions','PIX UPDATE NOTIFICATION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-11','IHE Transactions','RETRIEVE SPECIFIC INFORMATION FOR DISPLAY');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-12','IHE Transactions','RETRIEVE DOCUMENT FOR DISPLAY');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-13','IHE Transactions','FOLLOW CONTEXT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-14','IHE Transactions','REGISTER DOCUMENT SET');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-15','IHE Transactions','PROVIDE AND REGISTER DOCUMENT SET');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-16','IHE Transactions','QUERY REGISTRY');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-17','IHE Transactions','RETRIEVE DOCUMENTS');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-18','IHE Transactions','REGISTRY STORED QUERY');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-19','IHE Transactions','AUTHENTICATE NODE_TBL');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-20','IHE Transactions','RECORD AUDIT EVENT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-21','IHE Transactions','PATIENT DEMOGRAPHICS QUERY');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-22','IHE Transactions','PATIENT DEMOGRAPHICS AND VISIT QUERY');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-23','IHE Transactions','FIND PERSONNEL WHITE PAGES');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-24','IHE Transactions','QUERY PERSONNEL WHITE PAGES');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-30','IHE Transactions','PATIENT IDENTITY MANAGEMENT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-31','IHE Transactions','PATIENT ENCOUNTER MANAGEMENT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-32','IHE Transactions','DISTRIBUTE DOCUMENT SET ON MEDIA');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-38','IHE Transactions','CROSS GATEWAY QUERY');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-39','IHE Transactions','CROSS GATEWAY RETRIEVE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-40','IHE Transactions','PROVIDE X-USER ASSERTION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-41','IHE Transactions','PROVIDE AND REGISTER DOCUMENT SET-B');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-42','IHE Transactions','REGISTER DOCUMENT SET-B');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-43','IHE Transactions','RETRIEVE DOCUMENT SET');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-44','IHE Transactions','PATIENT IDENTITY FEED HL7V3');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-45','IHE Transactions','PIXV3 QUERY');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-46','IHE Transactions','PIXV3 UPDATE NOTIFICATION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-47','IHE Transactions','PATIENT DEMOGRAPHICS QUERY HL7V3');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'ITI-51','IHE Transactions','MULTI-PATIENT STORED QUERY');

INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '1','NetworkAccessPointType','MACHINE NAME');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '2','NetworkAccessPointType','IP ADDRESS');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '3','NetworkAccessPointType','TELEPHONE NUMBER');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '4','NetworkAccessPointType','EMAIL ADDRESS');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '5','NetworkAccessPointType','URI');

INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'C','ActionType','CREATE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'R','ActionType','READ');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'U','ActionType','UPDATE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'D','ActionType','DELETE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'E','ActionType','EXECUTE');

INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '0','OutcomeIndicator','SUCCESS');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '4','OutcomeIndicator','MINOR FAIL');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '8','OutcomeIndicator','SERIOUS FAIL');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '12','OutcomeIndicator','MAJOR FAIL');

INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'IHE0001','IHE','PROVISIONING EVENT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'IHE0002','IHE','MEDICATION EVENT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'IHE0003','IHE','RESOURCE ASSIGNMENT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'IHE0004','IHE','CARE EPISODE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'IHE0005','IHE','CARE PROTOCOL');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'IHE0006','IHE','DISCLOSURE');

INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), 'CDT-100002','CDT', 'PATIENT SEARCH ACTIVITY');

INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110100','DCM','APPLICATION ACTIVITY');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110101','DCM','AUDIT LOG USED');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110102','DCM','BEGIN TRANSFERRING DICOM INSTANCES ');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110103','DCM','DICOM INSTANCES ACCESSED');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110104','DCM','DICOM INSTANCES TRANSFERRED');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110105','DCM','DICOM STUDY DELETED');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110106','DCM','EXPORT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110107','DCM','IMPORT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110108','DCM','NETWORK ACTIVITY');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110109','DCM','ORDER RECORD');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110110','DCM','PATIENT RECORD');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110111','DCM','PROCEDURE RECORD');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110112','DCM','QUERY');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110113','DCM','SECURITY ALERT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110114','DCM','USER AUTHENTICATION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110120','DCM','APPLICATION START');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110121','DCM','APPLICATION STOP');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110122','DCM','LOGIN');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110123','DCM','LOGOUT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110124','DCM','ATTACH');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110125','DCM','DETACH');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110126','DCM','NODE_TBL AUTHENTICATION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110127','DCM','EMERGENCY OVERRIDE STARTED');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110132','DCM','USE OF A RESTRICTED FUNCTION');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110135','DCM','OBJECT SECURITY ATTRIBUTES CHANGED');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110136','DCM','SECURITY ROLES CHANGED');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110137','DCM','USER SECURITY ATTRIBUTES CHANGED');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110153','DCM','SOURCE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '110152','DCM','DESTINATION');

INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '1','AuditSourceType','END USER INTERFACE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '2','AuditSourceType','DEVICE OR INSTRUMENT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '3','AuditSourceType','WEB SERVER PROCESS');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '4','AuditSourceType','APPLICATION SERVER PROCESS');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '5','AuditSourceType','DATABASE SERVER PROCESS');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '6','AuditSourceType','SECURITY SERVICE PROCESS');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '7','AuditSourceType','ISO LEVEL 1 OR 3 COMPONENT');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '8','AuditSourceType','ISO LEVEL 4 OR 6 SOFTWARE');
INSERT INTO AUD_CD_TBL (CD_ID, MNEMONIC, DOMAIN, DISPLAY) VALUES (gen_uuid(), '9','AuditSourceType','OTHER');

COMMIT;